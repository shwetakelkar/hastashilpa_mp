{"ast":null,"code":"var _jsxFileName = \"/Users/shwetagupta/Coding/Repository/marketplace_hc/client/src/components/Helper/withAuth.js\";\nimport React, { Component } from \"react\";\nimport AuthHelperMethods from \"./AuthHelperMethods\";\nimport history from './history';\n/* A higher order component is frequently written as a function that returns a class. */\n\nexport default function withAuth(AuthComponent) {\n  var _temp;\n\n  const Auth = new AuthHelperMethods();\n  return _temp = class AuthWrapped extends Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        confirm: null,\n        loaded: false\n      };\n    }\n\n    componentDidMount() {\n      if (!Auth.loggedIn()) {\n        this.props.history.replace(\"/\");\n      } else {\n        /* Try to get confirmation message from the Auth helper. */\n        try {\n          const confirm = Auth.getConfirm();\n          console.log(\"confirmation is:\", confirm);\n          this.setState({\n            confirm: confirm,\n            loaded: true\n          });\n        } catch (err) {\n          /* Oh snap! Looks like there's an error so we'll print it out and log the user out for security reasons. */\n          console.log(err);\n          Auth.logout();\n          this.props.history.replace(\"/login\");\n        }\n      }\n    }\n\n    render() {\n      if (this.state.loaded === true) {\n        if (this.state.confirm) {\n          console.log(\"confirmed!\");\n          return (\n            /* component that is currently being wrapper(App.js) */\n            React.createElement(AuthComponent, {\n              history: this.props.history,\n              confirm: this.state.confirm,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42\n              },\n              __self: this\n            })\n          );\n        } else {\n          console.log(\"not confirmed!\");\n          return null;\n        }\n      } else {\n        return null;\n      }\n    }\n\n  }, _temp;\n}","map":{"version":3,"sources":["/Users/shwetagupta/Coding/Repository/marketplace_hc/client/src/components/Helper/withAuth.js"],"names":["React","Component","AuthHelperMethods","history","withAuth","AuthComponent","Auth","AuthWrapped","state","confirm","loaded","componentDidMount","loggedIn","props","replace","getConfirm","console","log","setState","err","logout","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA;;AACA,eAAe,SAASC,QAAT,CAAkBC,aAAlB,EAAiC;AAAA;;AAC9C,QAAMC,IAAI,GAAG,IAAIJ,iBAAJ,EAAb;AAEA,iBAAO,MAAMK,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;AAAA,WACzCO,KADyC,GACjC;AACNC,QAAAA,OAAO,EAAE,IADH;AAENC,QAAAA,MAAM,EAAE;AAFF,OADiC;AAAA;;AAOzCC,IAAAA,iBAAiB,GAAG;AAClB,UAAI,CAACL,IAAI,CAACM,QAAL,EAAL,EAAsB;AACpB,aAAKC,KAAL,CAAWV,OAAX,CAAmBW,OAAnB,CAA2B,GAA3B;AACH,OAFC,MAEK;AACH;AACA,YAAI;AACF,gBAAML,OAAO,GAAGH,IAAI,CAACS,UAAL,EAAhB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCR,OAAhC;AACA,eAAKS,QAAL,CAAc;AACZT,YAAAA,OAAO,EAAEA,OADG;AAEZC,YAAAA,MAAM,EAAE;AAFI,WAAd;AAID,SAPD,CAOE,OAAOS,GAAP,EAAY;AACZ;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAb,UAAAA,IAAI,CAACc,MAAL;AACA,eAAKP,KAAL,CAAWV,OAAX,CAAmBW,OAAnB,CAA2B,QAA3B;AACD;AACF;AACF;;AACDO,IAAAA,MAAM,GAAG;AACL,UAAI,KAAKb,KAAL,CAAWE,MAAX,KAAsB,IAA1B,EAAgC;AAC9B,YAAI,KAAKF,KAAL,CAAWC,OAAf,EAAwB;AACtBO,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA;AACE;AACA,gCAAC,aAAD;AACE,cAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWV,OADtB;AAEE,cAAA,OAAO,EAAE,KAAKK,KAAL,CAAWC,OAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAOD,SATD,MASO;AACLO,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,iBAAO,IAAP;AACD;AACF,OAdD,MAcO;AACH,eAAO,IAAP;AACL;AACF;;AA7CwC,GAA3C;AA+CD","sourcesContent":["import React, { Component } from \"react\";\nimport AuthHelperMethods from \"./AuthHelperMethods\";\nimport history from './history'\n\n/* A higher order component is frequently written as a function that returns a class. */\nexport default function withAuth(AuthComponent) {\n  const Auth = new AuthHelperMethods();\n\n  return class AuthWrapped extends Component {\n    state = {\n      confirm: null,\n      loaded: false\n    };\n\n    \n    componentDidMount() {\n      if (!Auth.loggedIn()) {\n        this.props.history.replace(\"/\");\n    } else {\n        /* Try to get confirmation message from the Auth helper. */\n        try {\n          const confirm = Auth.getConfirm();\n          console.log(\"confirmation is:\", confirm);\n          this.setState({\n            confirm: confirm,\n            loaded: true\n          });\n        } catch (err) {\n          /* Oh snap! Looks like there's an error so we'll print it out and log the user out for security reasons. */\n          console.log(err);\n          Auth.logout();\n          this.props.history.replace(\"/login\");\n        }\n      }\n    }\n    render() {\n        if (this.state.loaded === true) {\n          if (this.state.confirm) {\n            console.log(\"confirmed!\");\n            return (\n              /* component that is currently being wrapper(App.js) */\n              <AuthComponent\n                history={this.props.history}\n                confirm={this.state.confirm}\n              />\n            );\n          } else {\n            console.log(\"not confirmed!\");\n            return null;\n          }\n        } else {\n            return null;\n      }\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}