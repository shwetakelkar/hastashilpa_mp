{"ast":null,"code":"import axios from'axios';import jwtDecode from'jwt-decode';// instantiate axios\nvar AuthHelper=axios.create();AuthHelper.getToken=function(){return localStorage.getItem('token');};AuthHelper.setToken=function(token){localStorage.setItem('token',token);return token;};AuthHelper.getCurrentUser=function(){var token=this.getToken();if(token)return jwtDecode(token);return null;};AuthHelper.logIn=function(credentials){var _this=this;return this({method:'post',url:'/api/user/authenticate',data:credentials}).then(function(serverResponse){var token=serverResponse.data.token;if(token){// sets token as an included header for all subsequent api requests\n_this.defaults.headers.common.token=_this.setToken(token);return jwtDecode(token);}else{return false;}});};// logIn and signUp functions could be combined into one since the only difference is the url we're sending a request to..\nAuthHelper.signUp=function(userInfo){var _this2=this;console.log(\"hello\");// return this({ method: 'post', url: '/api/user', data: userInfo})\nreturn axios.post(\"/api/user/\",userInfo).then(function(serverResponse){var token=serverResponse.data.token;if(token){// sets token as an included header for all subsequent api requests\n_this2.defaults.headers.common.token=_this2.setToken(token);return jwtDecode(token);}else{return false;}});};AuthHelper.logOut=function(){localStorage.removeItem('token');delete this.defaults.headers.common.token;return true;};// During initial app load attempt to set a localStorage stored token\n// as a default header for all api requests.\nAuthHelper.defaults.headers.common.token=AuthHelper.getToken();export default AuthHelper;","map":{"version":3,"sources":["/Users/shwetagupta/Coding/Repository/marketplace_hc/client/src/AuthHelper.js"],"names":["axios","jwtDecode","AuthHelper","create","getToken","localStorage","getItem","setToken","token","setItem","getCurrentUser","logIn","credentials","method","url","data","then","serverResponse","defaults","headers","common","signUp","userInfo","console","log","post","logOut","removeItem"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CAEA;AACA,GAAMC,CAAAA,UAAU,CAAGF,KAAK,CAACG,MAAN,EAAnB,CAEAD,UAAU,CAACE,QAAX,CAAsB,UAAW,CAChC,MAAOC,CAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAP,CACA,CAFD,CAIAJ,UAAU,CAACK,QAAX,CAAsB,SAASC,KAAT,CAAgB,CACrCH,YAAY,CAACI,OAAb,CAAqB,OAArB,CAA8BD,KAA9B,EACA,MAAOA,CAAAA,KAAP,CACA,CAHD,CAKAN,UAAU,CAACQ,cAAX,CAA4B,UAAW,CACtC,GAAMF,CAAAA,KAAK,CAAG,KAAKJ,QAAL,EAAd,CACA,GAAGI,KAAH,CAAU,MAAOP,CAAAA,SAAS,CAACO,KAAD,CAAhB,CACV,MAAO,KAAP,CACA,CAJD,CAMAN,UAAU,CAACS,KAAX,CAAmB,SAASC,WAAT,CAAsB,gBACxC,MAAO,MAAK,CAAEC,MAAM,CAAE,MAAV,CAAkBC,GAAG,CAAE,wBAAvB,CAAiDC,IAAI,CAAEH,WAAvD,CAAL,EACLI,IADK,CACA,SAACC,cAAD,CAAoB,CACzB,GAAMT,CAAAA,KAAK,CAAGS,cAAc,CAACF,IAAf,CAAoBP,KAAlC,CACA,GAAGA,KAAH,CAAU,CACT;AACA,KAAI,CAACU,QAAL,CAAcC,OAAd,CAAsBC,MAAtB,CAA6BZ,KAA7B,CAAqC,KAAI,CAACD,QAAL,CAAcC,KAAd,CAArC,CACA,MAAOP,CAAAA,SAAS,CAACO,KAAD,CAAhB,CACA,CAJD,IAIO,CACN,MAAO,MAAP,CACA,CACD,CAVK,CAAP,CAWA,CAZD,CAcA;AACAN,UAAU,CAACmB,MAAX,CAAoB,SAASC,QAAT,CAAmB,iBACtCC,OAAO,CAACC,GAAR,CAAY,OAAZ,EACA;AACC,MAAOxB,CAAAA,KAAK,CAACyB,IAAN,CAAW,YAAX,CAAyBH,QAAzB,EAAmCN,IAAnC,CAAwC,SAACC,cAAD,CAAoB,CAClE,GAAMT,CAAAA,KAAK,CAAGS,cAAc,CAACF,IAAf,CAAoBP,KAAlC,CACA,GAAGA,KAAH,CAAU,CACT;AACA,MAAI,CAACU,QAAL,CAAcC,OAAd,CAAsBC,MAAtB,CAA6BZ,KAA7B,CAAqC,MAAI,CAACD,QAAL,CAAcC,KAAd,CAArC,CACA,MAAOP,CAAAA,SAAS,CAACO,KAAD,CAAhB,CACA,CAJD,IAIO,CACN,MAAO,MAAP,CACA,CACD,CATM,CAAP,CAUD,CAbD,CAeAN,UAAU,CAACwB,MAAX,CAAoB,UAAW,CAC9BrB,YAAY,CAACsB,UAAb,CAAwB,OAAxB,EACA,MAAO,MAAKT,QAAL,CAAcC,OAAd,CAAsBC,MAAtB,CAA6BZ,KAApC,CACA,MAAO,KAAP,CACA,CAJD,CAMA;AACA;AACAN,UAAU,CAACgB,QAAX,CAAoBC,OAApB,CAA4BC,MAA5B,CAAmCZ,KAAnC,CAA2CN,UAAU,CAACE,QAAX,EAA3C,CACA,cAAeF,CAAAA,UAAf","sourcesContent":["import axios from 'axios'\nimport jwtDecode from 'jwt-decode'\n\n// instantiate axios\nconst AuthHelper = axios.create()\n\nAuthHelper.getToken = function() {\n\treturn localStorage.getItem('token')\n}\n\nAuthHelper.setToken = function(token) {\n\tlocalStorage.setItem('token', token)\n\treturn token\n}\n\nAuthHelper.getCurrentUser = function() {\n\tconst token = this.getToken()\n\tif(token) return jwtDecode(token)\n\treturn null\n}\n\nAuthHelper.logIn = function(credentials) {\n\treturn this({ method: 'post', url: '/api/user/authenticate', data: credentials })\n\t\t.then((serverResponse) => {\n\t\t\tconst token = serverResponse.data.token\n\t\t\tif(token) {\n\t\t\t\t// sets token as an included header for all subsequent api requests\n\t\t\t\tthis.defaults.headers.common.token = this.setToken(token)\n\t\t\t\treturn jwtDecode(token)\n\t\t\t} else {\n\t\t\t\treturn false\n\t\t\t}\n\t\t})\n}\n\n// logIn and signUp functions could be combined into one since the only difference is the url we're sending a request to..\nAuthHelper.signUp = function(userInfo) {\n\tconsole.log(\"hello\")\n\t// return this({ method: 'post', url: '/api/user', data: userInfo})\n\t\treturn axios.post(\"/api/user/\", userInfo).then((serverResponse) => {\n\t\t\tconst token = serverResponse.data.token\n\t\t\tif(token) {\n\t\t\t\t// sets token as an included header for all subsequent api requests\n\t\t\t\tthis.defaults.headers.common.token = this.setToken(token)\n\t\t\t\treturn jwtDecode(token)\n\t\t\t} else {\n\t\t\t\treturn false\n\t\t\t}\n\t\t})\n}\n\nAuthHelper.logOut = function() {\n\tlocalStorage.removeItem('token')\n\tdelete this.defaults.headers.common.token\n\treturn true\n}\n\n// During initial app load attempt to set a localStorage stored token\n// as a default header for all api requests.\nAuthHelper.defaults.headers.common.token = AuthHelper.getToken()\nexport default AuthHelper"]},"metadata":{},"sourceType":"module"}